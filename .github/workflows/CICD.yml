name: CI

permissions:
  contents: read
  id-token: write  # only if you're using OIDC
  pull-requests: read  # only if needed for PR jobs

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:
    inputs:
      vault_name:
        description: 'Name of the Recovery Services Vault'
        required: false
        default: 'my-recovery-vault'
        

jobs:
  terraform-format:
    name: Terraform Format
    runs-on: ubuntu-latest
    # environment: production
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init 
        
      - name: Terraform Format
        run: terraform fmt -check -recursive

  terraform-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    # environment: production
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init 
        
      - name: Terraform Validate
        run: terraform validate

  terraform-tfsec:
    name: Terraform TfSec Scanning
    runs-on: ubuntu-latest
    # environment: production
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init 
        
      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0

  terraform-checkov:
    name: Terraform Checkov Scanning
    runs-on: ubuntu-latest
    # environment: production
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init 
        
       # - name: Run Checkov
        #  uses: bridgecrewio/checkov-action@v12
        #  with:
          #  directory: .
          #  framework: terraform

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [
      terraform-format,
      terraform-validate,
      terraform-tfsec,
      terraform-checkov
    ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
              
      - name: Terraform Plan                
        run: terraform plan -out=plan.out

      - name: Upload plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: plan.out

  checkov:
    name: checkov Plan
    runs-on: ubuntu-latest
    needs: terraform-plan
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init 

      - name: Download plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Convert to JSON
        run: terraform show -json plan.out > tfplan.json

      # - name: Run Checkov
      #   uses: bridgecrewio/checkov-action@master
      #   with:
      #     file: tfplan.json

  compliance:
    name: Terraform Compliance
    runs-on: ubuntu-latest
    needs: terraform-plan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init 

      - name: Download plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Convert to JSON
        run: terraform show -json plan.out > tfplan.json

      - name: Install terraform-compliance
        run: |
          pip install terraform-compliance

      # - name: Run terraform-compliance
      #   run: terraform-compliance -p tfplan.json -f features/

  terraformapply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: [checkov, compliance]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # - name: Log in to Azure
      #   uses: azure/login@v2
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}
      #     enable-AzPSSession: true

      - name: Terraform Init
        run: terraform init 

      - name: Download plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Terraform Plan
        run: terraform plan -out=tfplan
  
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

  
